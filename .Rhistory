q()
install.packages(c("adehabitat","XML","lattice","hexbin",
"colorRamps" ,"corrplot","gplots", "rgl", "MASS", "adehabitatLT","corrplot"), dependencies=TRUE)
q()
load("F:/PV-Anlage/.RData")
flyData <- xmlParse(file.choose())
require("XML")
require("data.table")
install.packages(XML)
install.packages("XML")
install.packages("data.table")
library("XML")
flyData <- xmlParse(file.choose())
flyData <- xmlParse(file.choose())
library("XML")
flyData <- xmlParse(file.choose())
flyDataXMLtop = xmlRoot(flyData)
##parse the metadata
URIs <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/URIs"))
experimenter <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/experimenter"))
fly <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/fly"))
experiment <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/experiment"))
##parse sequence data
NofPeriods = as.integer(xmlGetAttr(flyDataXMLtop[['sequence']], "periods"))
sequence <- xmlToDataFrame(nodes=getNodeSet(flyData,"//sequence/period"))
##parse time series data
CSV_descriptor <- xmlToDataFrame(nodes=getNodeSet(flyData,"//timeseries/CSV_descriptor"))
variables <- xmlToDataFrame(nodes=getNodeSet(flyData,"//timeseries/variables/variable"))
View(variables)
test <- xmlValue(nodes=getNodeSet(flyData,"//timeseries/csv_data"))
print(flyDataXMLtop)
NofPeriods = as.integer(xmlGetAttr(flyData[['sequence']], "periods"))
as.numeric(xmlSAppy(flyDataXMLtop, xmlValue))
as.numeric(xmlSApply(flyDataXMLtop, xmlValue))
as.numeric(xmlSApply(flyDataXMLtop[['timeseries']][[csv_data]], xmlValue))
as.numeric(xmlSApply(flyDataXMLtop[['timeseries']],"csv_data"", xmlValue))
as.numeric(xmlSApply(flyDataXMLtop[['timeseries']],"csv_data", xmlValue))
as.numeric(xmlSApply(flyDataXMLtop[['timeseries']],[['csv_data']], xmlValue))
as.numeric(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
as.list(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
as.data.frame(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-as.data.frame.character(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
View(test)
test2<-read.table(test)
test2<-read.table($test)
test2<-read.table($test)
view(NofPeriods)
test<-as.table(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-as.data.frame.character(matrix(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue)))
test<-as.data.frame.character(matrix(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue)))
test<-as.data.frame.character(matrix(unlist(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))))
test<-as.data.frame.character(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-as.data.frame(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
View(test)
test<-data.frame(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-read.table(text="xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue)")
test<-read.table(text=(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-data.frame(xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
test<-xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue)
test2<read.table(text=test)
test2<-read.table(text=test)
View(test2)
rawdata<-read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue))
View(rawdata)
View(variables)
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=c(variables['type])
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=c(variables['type'])
variables[[1]]
variables[[type]]
variables[["type"]]
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=c(variables[[type]])
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=(variables[[type]])
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=variables[[type]])
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=variables[["type"]])
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=variables$type)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
pwd
setwd
wd
setwd(B:\GitHub\DTSevaluations)
setwd("B:\GitHub\DTSevaluations")
setwd(B:/GitHub/DTSevaluations)
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
View(rawdata)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
warnings()
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
installed.packages(reshape2)
installed.packages("reshape2")
install.packages("reshape2")
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
install.packages("ggplot2")
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
install.packages("tidyr")
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
metadata <- list(URIs, experimenter, fy, experiment)
flyData <- xmlParse(file.choose())
flyDataXMLtop = xmlRoot(flyData)
##parse the metadata
URIs <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/URIs"))
experimenter <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/experimenter"))
fly <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/fly"))
experiment <- xmlToDataFrame(nodes=getNodeSet(flyData,"//metadata/experiment"))
##list the metadata
metadata <- list(URIs, experimenter, fy, experiment)
##parse sequence data
NofPeriods = as.integer(xmlGetAttr(flyDataXMLtop[['sequence']], "periods"))
sequence <- xmlToDataFrame(nodes=getNodeSet(flyData,"//sequence/period"))
##parse time series data
CSV_descriptor <- xmlToDataFrame(nodes=getNodeSet(flyData,"//timeseries/CSV_descriptor"))
variables <- xmlToDataFrame(nodes=getNodeSet(flyData,"//timeseries/variables/variable"))
##parse the time series raw data
rawdata <- read.table(text=xmlSApply(flyDataXMLtop[['timeseries']][['csv_data']], xmlValue), col.names=variables$type)
metadata <- list(URIs, experimenter, fly, experiment)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/plotdata.R', echo=TRUE)
