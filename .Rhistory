Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", PItype[[t]]$desc)==TRUE){
Exp = na.omit(PItype[[t]])
} else {
Control[[Count]] =na.omit(PItype[[t]])
Count=Count+1
}
}
#drop second column
Exp<-Exp[ , !(names(Exp) %in% "desc")]
for (t in 1:(NofGroups-1)) {
Control[[t]] <- Control[[t]][ , !(names(Control[[t]]) %in% "desc")]
}
#groupe 3 (experimental) vs the other two groups
utest1 = signif(wilcox.test(Exp,Control[[1]])$p.value, 3)
utest2 = signif(wilcox.test(Exp,Control[[2]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp,Control[[1]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp,Control[[2]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp, Control[[1]])$estimate, 3)
cohend2 = signif(cohen.d(Exp, Control[[2]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[1], d = cohend1, alternative = alt, sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[2], d = cohend2, alternative = alt, sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp, Control[[1]]))
bayesF2=extractBF(ttestBF(Control[[1]], Control[[2]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-(cbind(TestxCont1=c(signif[1],
w.statistic1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-list(ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
ggtitle(paste("U-Test, p=", utest2)) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[2]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes))
#add table with results and plot
plots.utest <-tableGrob(results.utest)
plots.2test <- grob(plots.2test)
#ot.utest <- tableGrob(results.utest)
#grid.arrange(grobs = plots.2test, nrow=1)
grid.arrange(arrangeGrob(plots.utest, ncol=2), nrow = 1)
grid.arrange(plots.2test, plots.utest, nrow = 2)
grid.arrange(arrangeGrob(plots.utest, ncol=2), nrow = 1)
cat("\n## Statistical tests between three groups\n")
#creating a list with PIs and condition in on list
PItype <- list()
desc <- list()
for (x in 1:NofGroups){
PItype[[x]] = melt(PIstat[[x]])
desc[[x]] = project.data$resources[[x]]$description
PItype[[x]]$desc = desc[[x]]
}
rm(desc)
#groupe in experimental and driver groupe
Count=1
Control=list()
Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", PItype[[t]]$desc)==TRUE){
Exp = na.omit(PItype[[t]])
} else {
Control[[Count]] =na.omit(PItype[[t]])
Count=Count+1
}
}
#drop second column
Exp<-Exp[ , !(names(Exp) %in% "desc")]
for (t in 1:(NofGroups-1)) {
Control[[t]] <- Control[[t]][ , !(names(Control[[t]]) %in% "desc")]
}
#groupe 3 (experimental) vs the other two groups
utest1 = signif(wilcox.test(Exp,Control[[1]])$p.value, 3)
utest2 = signif(wilcox.test(Exp,Control[[2]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp,Control[[1]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp,Control[[2]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp, Control[[1]])$estimate, 3)
cohend2 = signif(cohen.d(Exp, Control[[2]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[1], d = cohend1, alternative = alt, sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[2], d = cohend2, alternative = alt, sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp, Control[[1]]))
bayesF2=extractBF(ttestBF(Control[[1]], Control[[2]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-(cbind(TestxCont1=c(signif[1],
w.statistic1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-list(ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
ggtitle(paste("U-Test, p=", utest2)) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[2]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes))
#add table with results and plot
plots.utest <-tableGrob(results.utest)
plots.2testgrob <- grob(plots.2test)
#ot.utest <- tableGrob(results.utest)
#grid.arrange(grobs = plots.2test, nrow=1)
grid.arrange(plots.2test, plots.utest, nrow = 2)
grid.arrange(plots.2test, nrow = 2)
install.packages("gridextra")
library(gridExtra)
grid.arrange(plots.2test, nrow = 2)
library(ggplot2)
library(gridExtra)
# Make 3 simple graphics:
g1 <- ggplot(mtcars, aes(x=qsec)) + geom_density(fill="slateblue")
g2 <- ggplot(mtcars, aes(x=drat, y=qsec, color=cyl)) + geom_point(size=5) + theme(legend.position="none")
g3 <- ggplot(mtcars, aes(x=factor(cyl), y=qsec, fill=cyl)) + geom_boxplot() + theme(legend.position="none")
g4 <- ggplot(mtcars , aes(x=factor(cyl), fill=factor(cyl))) +  geom_bar()
# Plots
grid.arrange(g2, arrangeGrob(g3, g4, ncol=2), nrow = 2)
grid.arrange(g1, g2, g3, nrow = 3)
grid.arrange(g2, arrangeGrob(g3, g4, ncol=2), nrow = 1)
grid.arrange(g2, arrangeGrob(g3, g4, nrow=2), nrow = 1)
grid.arrange(g1, plots.2test, g3, nrow = 3)
# plot two PIs with asterisks
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
ggtitle(paste("U-Test, p=", utest2)) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[2]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
grid.arrange(plots.2test, nrow = 2)
grid.arrange(plots.2test, nrow = 2)
grid.arrange(arrangeGrob(plots.utest, ncol=2), nrow = 1)
grid.arrange(arrangeGrob(plots.2test,plots.utest, ncol=2), nrow = 1)
grid.arrange(arrangeGrob(plots.2test,plots.utest, ncol=2)
grid.arrange(arrangeGrob(plots.2test,plots.utest, ncol=2))
grid.arrange(arrangeGrob(plots.2test,plots.utest, ncol=2), nrow = 1)
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 1)
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 1,heights=c(4,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 2,heights=c(4,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 2,heights=c(7,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 2,heights=c(1,9))
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 2, widths=c(5,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), nrow = 2, widths=c(8,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(8,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(20,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(20,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(10000000,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(4,1))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(4,1), hight =c(5,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(4,1), hight =c(5,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2, widths=c(4,1), height =c(5,2))
grid.arrange(arrangeGrob(plots.2test,plots.utest), ncol = 2,  height =c(5,2))
grid.arrange(plots.2test, nrow = 2)
grid.arrange(plots.2test, nrow = 2, height = (5))
cat("\n## Statistical tests between three groups\n")
#creating a list with PIs and condition in on list
PItype <- list()
desc <- list()
for (x in 1:NofGroups){
PItype[[x]] = melt(PIstat[[x]])
desc[[x]] = project.data$resources[[x]]$description
PItype[[x]]$desc = desc[[x]]
}
rm(desc)
#groupe in experimental and driver groupe
Count=1
Control=list()
Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", PItype[[t]]$desc)==TRUE){
Exp = na.omit(PItype[[t]])
} else {
Control[[Count]] =na.omit(PItype[[t]])
Count=Count+1
}
}
#drop second column
Exp<-Exp[ , !(names(Exp) %in% "desc")]
for (t in 1:(NofGroups-1)) {
Control[[t]] <- Control[[t]][ , !(names(Control[[t]]) %in% "desc")]
}
#groupe 3 (experimental) vs the other two groups
utest1 = signif(wilcox.test(Exp,Control[[1]])$p.value, 3)
utest2 = signif(wilcox.test(Exp,Control[[2]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp,Control[[1]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp,Control[[2]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp, Control[[1]])$estimate, 3)
cohend2 = signif(cohen.d(Exp, Control[[2]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[1], d = cohend1, alternative = alt, sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[2], d = cohend2, alternative = alt, sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp, Control[[1]]))
bayesF2=extractBF(ttestBF(Control[[1]], Control[[2]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-(cbind(TestxCont1=c(signif[1],
w.statistic1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
ggtitle(paste("U-Test, p=", utest2)) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[2]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
plots.utest <-tableGrob(results.utest)
plots.2testgrob <- grob(plots.2test)
#ot.utest <- tableGrob(results.utest)
grid.arrange(grobs = plots.2test, nrow=1)
rid.arrange(grobs = plots.2test, ncol=2)
cat("\n## Statistical tests between pooled groups\n")
cat("The following experimental groups were pooled into two groups:\n")
kable(PooledGroups)
utest = signif(wilcox.test(PIprofilePooled[[1]],PIprofilePooled[[2]])$p.value, 3) #compare the two groups with a U-test and collect p-value
cat("\n## Statistical tests between three groups\n")
#creating a list with PIs and condition in on list
PItype <- list()
desc <- list()
for (x in 1:NofGroups){
PItype[[x]] = melt(PIstat[[x]])
desc[[x]] = project.data$resources[[x]]$description
PItype[[x]]$desc = desc[[x]]
}
rm(desc)
#groupe in experimental and driver groupe
Count=1
Control=list()
Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", PItype[[t]]$desc)==TRUE){
Exp = na.omit(PItype[[t]])
} else {
Control[[Count]] =na.omit(PItype[[t]])
Count=Count+1
}
}
#drop second column
Exp<-Exp[ , !(names(Exp) %in% "desc")]
for (t in 1:(NofGroups-1)) {
Control[[t]] <- Control[[t]][ , !(names(Control[[t]]) %in% "desc")]
}
#groupe 3 (experimental) vs the other two groups
utest1 = signif(wilcox.test(Exp,Control[[1]])$p.value, 3)
utest2 = signif(wilcox.test(Exp,Control[[2]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp,Control[[1]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp,Control[[2]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp, Control[[1]])$estimate, 3)
cohend2 = signif(cohen.d(Exp, Control[[2]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[1], d = cohend1, alternative = alt, sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = samplesizes[3], n2= samplesizes[2], d = cohend2, alternative = alt, sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp, Control[[1]]))
bayesF2=extractBF(ttestBF(Control[[1]], Control[[2]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-(cbind(TestxCont1=c(signif[1],
w.statistic1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-list(ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
ggtitle(paste("U-Test, p=", utest2)) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[2]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes))
#add table with results and plot
plots.2test[[2]]<-tableGrob(results.utest)
rid.arrange(grobs = plots.2test, ncol=2)
grid.arrange(grobs = plots.2test, ncol=2)
