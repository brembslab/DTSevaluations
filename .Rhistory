xlab("Torque preference [rel. units]") +
theme(aspect.ratio=aspect_ratio)
install.packages(c("askpass", "BiocManager", "broom", "bslib", "cachem", "class", "classInt", "cpp11", "curl", "dbplyr", "DescTools", "deSolve", "digest", "dplyr", "evaluate", "fontawesome", "fs", "gargle", "ggbeeswarm", "ggplot2", "googledrive", "googlesheets4", "gss", "gtable", "haven", "htmltools", "httpuv", "httr", "jsonlite", "KernSmooth", "knitr", "labeling", "labelled", "later", "lattice", "lmom", "magick", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "mvtnorm", "nlme", "nnet", "openssl", "pbapply", "processx", "promises", "ps", "purrr", "Rcpp", "RCurl", "readxl", "rematch", "remotes", "rlang", "rmarkdown", "RSQLite", "rstudioapi", "sass", "seewave", "shiny", "spatial", "styler", "survival", "sys", "timeSeries", "tinytex", "tuneR", "tzdb", "uuid", "vctrs", "viridisLite", "vroom", "xfun", "xml2", "xts", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
exists(plotOMparamsBefore$group), "right")
"right" %in% plotOMparamsBefore$group
install.packages(c("DescTools", "digest", "dplyr", "htmltools", "lattice", "MASS", "Matrix", "Rcpp", "rlang", "survival", "vctrs", "xfun"))
library(ggplot2)
library(cowplot)
library(ggiraph)
library(tidyr)
library(dygraphs)
library(grid)
library(reshape2)
library(plyr)
library(dplyr)
library(gridExtra)
library(yaml)
library(ggsignif)
library(effsize)
library(pwr)
library(BayesFactor)
library(genefilter)
library(seewave)
library(lubridate)
library(rmarkdown)
library(markdown)
library(knitr)
library(dabestr)
library(zoo)
library(tidyverse)
library(questionr)
library(data.table)
library(DescTools)
library(magick)
library(reactable)
library(raincloudplots)
library(sicegar)
library(ggpmisc)
library(ggrain)
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
install.packages("ggiraph")
install.packages("ggiraph")
install.packages("ggiraph")
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
library(ggplot2)
library(cowplot)
library(ggiraph)
library(tidyr)
library(dygraphs)
library(grid)
library(reshape2)
library(plyr)
library(dplyr)
library(gridExtra)
library(yaml)
library(ggsignif)
library(effsize)
library(pwr)
library(BayesFactor)
library(genefilter)
library(seewave)
library(lubridate)
library(rmarkdown)
library(markdown)
library(knitr)
library(dabestr)
library(zoo)
library(tidyverse)
library(questionr)
library(data.table)
library(DescTools)
library(magick)
library(reactable)
library(raincloudplots)
library(sicegar)
library(ggpmisc)
library(ggrain)
#### call RMarkdown for single fly evaluations ###############################################
rmarkdown::render(paste(start.wd,"/rmarkdown/single_fly.Rmd", sep=""),                  ######
output_file = paste(flyname,"qc.html", sep="_"),                      ######
output_dir = dataset.path)                                            ######
load("B:/GitHub/DTSevaluations/.RData")
#### call RMarkdown for single fly evaluations ###############################################
rmarkdown::render(paste(start.wd,"/rmarkdown/single_fly.Rmd", sep=""),                  ######
output_file = paste(flyname,"qc.html", sep="_"),                      ######
output_dir = dataset.path)                                            ######
load("B:/GitHub/DTSevaluations/.RData")
#### call RMarkdown for single fly evaluations ###############################################
rmarkdown::render(paste(start.wd,"/rmarkdown/single_fly.Rmd", sep=""),                  ######
output_file = paste(flyname,"qc.html", sep="_"),                      ######
output_dir = dataset.path)                                            ######
source("B:/GitHub/DTSevaluations/evaluate_datasets.R")
melt(OMPIcorr)
knitr::opts_chunk$set(echo = TRUE)
ggplot(melt(OMPIcorr),aes(postPIs.group, variable, fill=postPIs.group, color=postPIs.group))
ggplot(melt(OMPIcorr),aes(postPIs.group, value, fill=postPIs.group, color=postPIs.group))
ggplot(melt(OMPIcorr),aes(variable, value, fill=variable, color=variable))
ggplot(melt(OMPIcorr),aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5, shape=postPIs.group, color = "black", alpha=as.integer(as.factor(postPIs.group))/max(as.integer(as.factor(postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))
ggplot(melt(OMPIcorr),aes(variable, value, fill=variable, color=variable))
ggplot(melt(OMPIcorr),aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5, shape=postPIs.group, color = "black", alpha=as.integer(as.factor(postPIs.group))/max(as.integer(as.factor(postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))
meltedOMPI=melt(OMPIcorr)
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5, shape=postPIs.group, color = "black", alpha=as.integer(as.factor(postPIs.group))/max(as.integer(as.factor(postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))
View(meltedOMPI)
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=c("◄","►"),
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
scale_y_continuous(breaks = seq(-1, 1, .2))
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2))
boxcolors
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = values = c("khaki","olivedrab3","khaki","olivedrab3")) + #color of the violin plot
ggplot(meltedOMPI, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = c("khaki","olivedrab3","khaki","olivedrab3")) + #color of the violin plot
scale_color_manual(values = c("khaki","olivedrab3","khaki","olivedrab3"))
meltedOMPI$variable[1,2]
meltedOMPI$variable[1..2]
ggplot(subset(meltedOMPI, variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category")), aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = c("khaki","olivedrab3","khaki","olivedrab3")) + #color of the violin plot
scale_color_manual(values = c("khaki","olivedrab3","khaki","olivedrab3"))
ggplot(subset(meltedOMPI, variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category")), aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=meltedOMPI$postPIs.group,
color = "black",
alpha=as.integer(as.factor(meltedOMPI$postPIs.group))/max(as.integer(as.factor(meltedOMPI$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors)
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors)
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
mOMPIafter=subset(melt(OMPIcorr), variable %in% c("plotOMparamsAfter.AI.OM.", "postPIs.category"))
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors)
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("Indices [rel. units]"))
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
color = "black",
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
mOMPIbefore$postPIs.group[mOMPIbefore$postPIs.group=="right"]="►"
mOMPIbefore$postPIs.group[mOMPIbefore$postPIs.group=="left"]="◄"
View(mOMPIbefore)
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
mOMPIbefore$postPIs.group[mOMPIbefore$postPIs.group=="right"]
mOMPIbefore$postPIs.group[mOMPIbefore$postPIs.group=="right"]<-as.factor("►")
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
as.factor("►")
levels(mOMPIbefore$postPIs.group)[match("right",levels(mOMPIbefore$postPIs.group))] <- "►"
levels(mOMPIbefore$postPIs.group)[match("left",levels(mOMPIbefore$postPIs.group))] <- "◄"
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
levels(mOMPIbefore$postPIs.group)[match("right",levels(mOMPIbefore$postPIs.group))] <- as.double("►")
levels(mOMPIbefore$postPIs.group)[match("left",levels(mOMPIbefore$postPIs.group))] <- as.double("◄")
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
levels(mOMPIbefore$postPIs.group)[match("right",levels(mOMPIbefore$postPIs.group))] <- "►"
levels(mOMPIbefore$postPIs.group)[match("left",levels(mOMPIbefore$postPIs.group))] <- "◄"
typeof(mOMPIbefore$postPIs.group)
typeof(HeatOn)
mOMPIbefore=subset(melt(OMPIcorr), variable %in% c("plotOMparamsBefore.AI.OM.", "pretestPIs.category"))
levels(mOMPIbefore$postPIs.group)[match("right",levels(mOMPIbefore$postPIs.group))] <- as.character("►")
levels(mOMPIbefore$postPIs.group)[match("left",levels(mOMPIbefore$postPIs.group))] <- as.character("◄")
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=mOMPIbefore$postPIs.group,
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
typeof(mOMPIbefore$postPIs.group)
ggplot(mOMPIbefore, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=as.character(mOMPIbefore$postPIs.group),
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
mOMPIafter=subset(melt(OMPIcorr), variable %in% c("plotOMparamsAfter.AI.OM.", "postPIs.category"))
levels(mOMPIafter$postPIs.group)[match("right",levels(mOMPIafter$postPIs.group))] <- "►"
levels(mOMPIafter$postPIs.group)[match("left",levels(mOMPIafter$postPIs.group))] <- "◄"
ggplot(mOMPIafter, aes(variable, value, fill=variable, color=variable)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_rain(point.args = list(size = 5,
shape=as.character(mOMPIbefore$postPIs.group),
alpha=as.integer(as.factor(mOMPIbefore$postPIs.group))/max(as.integer(as.factor(mOMPIbefore$postPIs.group)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1)) +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_y_continuous(breaks = seq(-1, 1, .2), limits = c(-1,1)) +
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(size=10), axis.text.y = element_text(size=10)) + ylab(paste("Indices [rel. units]"))+
scale_x_discrete(labels=c("optomotor", "torque"))
View(mOMPIafter)
