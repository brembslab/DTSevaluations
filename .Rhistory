out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-data.frame(cbind(TestxCont1=c(signif[1],
w.statistic1,
utest1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
utest2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
colnames(results.utest)<-c(paste(PIname[1], PIname[2]),paste(PIname[1], PIname[3]))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"U-Test p-value",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
#grid.arrange(plots.2test,plots.2utest, nrow = 1)
}
}
grid.arrange(plots.2test,plots.2utest, nrow = 1)
####### Do not separate optomotor parameters at all ##########
plotOMparams=ldply(grouped.OMparams, data.frame)    #move the dataframes from each group into a single dataframe
OMvariables = head(names(plotOMparams),-1)
OMtitles = c("Optomotor Magnitude", "Rate Constant", "Asymmetry Index")
#for one group without statistics
if(NofGroups==1)
{
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], "\n\n", sep = ""))
print(ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_boxplot(fill = boxcolors, notch = FALSE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data = plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste(OMtitles[v], " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
samplesizes.annotate(boxes, samplesizes))
}
}
#for two groups with statistics
if(NofGroups==2)
{
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], " at start of experiment\n\n", sep = ""))
plots.2test<-plotOMParamBox(v, plotOMparams, samplesizes, OMvariables, OMtitles) #call function to plot box/whisker diagram and calculate statistics
grid.arrange(grobs = plots.2test, ncol=2)
}
}
if(NofGroups==3)
{
Count=1
Control=list()
Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", tolower(grouped.OMparams[[t]]$desc)) | grepl("exp", tolower(grouped.OMparams[[t]]$desc)) | grepl("experimental", tolower(grouped.OMparams[[t]]$desc))==TRUE){
Exp = na.omit(grouped.OMparams[[t]])
} else {
Control[[Count]] =na.omit(grouped.OMparams[[t]])
Count=Count+1
}
}
PIname<-c(unique(Exp$group), unique(Control[[1]]$group),unique(Control[[2]]$group))
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], " at start of experiment\n\n", sep = ""))
utest1 = signif(wilcox.test(Exp[[v]],Control[[1]][[v]])$p.value, 3)
utest2 = signif(wilcox.test(Exp[[v]],Control[[2]][[v]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp[[v]],Control[[1]][[v]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp[[v]],Control[[2]][[v]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp[[v]], Control[[1]][[v]])$estimate, 3)
cohend2 = signif(cohen.d(Exp[[v]], Control[[2]][[v]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = length(Exp), n2= length(Control[[1]]), d = cohend1, alternative = alt,
sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = length(Exp), n2= length(Control[[2]]), d = cohend2, alternative = alt,
sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp[[v]], Control[[1]][[v]]))
bayesF2=extractBF(ttestBF(Exp[[v]], Control[[2]][[v]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-data.frame(cbind(TestxCont1=c(signif[1],
w.statistic1,
utest1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
utest2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
colnames(results.utest)<-c(paste(PIname[1], PIname[2]),paste(PIname[1], PIname[3]))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"U-Test p-value",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2test,plots.2utest, nrow = 1)
}
}
####### Do not separate optomotor parameters at all ##########
plotOMparams=ldply(grouped.OMparams, data.frame)    #move the dataframes from each group into a single dataframe
OMvariables = head(names(plotOMparams),-1)
OMtitles = c("Optomotor Magnitude", "Rate Constant", "Asymmetry Index")
#for one group without statistics
if(NofGroups==1)
{
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], "\n\n", sep = ""))
print(ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_boxplot(fill = boxcolors, notch = FALSE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data = plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=18))+ ylab(paste(OMtitles[v], " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
samplesizes.annotate(boxes, samplesizes))
}
}
#for two groups with statistics
if(NofGroups==2)
{
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], " at start of experiment\n\n", sep = ""))
plots.2test<-plotOMParamBox(v, plotOMparams, samplesizes, OMvariables, OMtitles) #call function to plot box/whisker diagram and calculate statistics
grid.arrange(grobs = plots.2test, ncol=2)
}
}
if(NofGroups==3)
{
Count=1
Control=list()
Exp=list()
for (t in 1:NofGroups) {
if(grepl("test", tolower(grouped.OMparams[[t]]$desc)) | grepl("exp", tolower(grouped.OMparams[[t]]$desc)) | grepl("experimental", tolower(grouped.OMparams[[t]]$desc))==TRUE){
Exp = na.omit(grouped.OMparams[[t]])
} else {
Control[[Count]] =na.omit(grouped.OMparams[[t]])
Count=Count+1
}
}
PIname<-c(unique(Exp$group), unique(Control[[1]]$group),unique(Control[[2]]$group))
for (v in 1:3) {
cat(paste("\n\n## ", OMtitles[v], " at start of experiment\n\n", sep = ""))
utest1 = signif(wilcox.test(Exp[[v]],Control[[1]][[v]])$p.value, 3)
utest2 = signif(wilcox.test(Exp[[v]],Control[[2]][[v]])$p.value, 3)#compare the two groups with a U-test and collect p-value
w.statistic1 = signif(wilcox.test(Exp[[v]],Control[[1]][[v]])$statistic, 3)
w.statistic2 = signif(wilcox.test(Exp[[v]],Control[[2]][[v]])$statistic, 3)
#compute effect size Cohen's D
cohend1 = signif(cohen.d(Exp[[v]], Control[[1]][[v]])$estimate, 3)
cohend2 = signif(cohen.d(Exp[[v]], Control[[2]][[v]])$estimate, 3)
#calculate statistical power
alt = project.data[["statistics"]][["three.groups"]][["power"]]
power1=signif(pwr.t2n.test(n1 = length(Exp), n2= length(Control[[1]]), d = cohend1, alternative = alt,
sig.level = signif[1])$power, 3)
power2=signif(pwr.t2n.test(n1 = length(Exp), n2= length(Control[[2]]), d = cohend2, alternative = alt,
sig.level = signif[1])$power, 3)
#calculate Bayes Factor
bayesF1=extractBF(ttestBF(Exp[[v]], Control[[1]][[v]]))
bayesF2=extractBF(ttestBF(Exp[[v]], Control[[2]][[v]]))
#calculate FPR for priors set in project file#
#run first prior
prior=priorval[1]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz1=out1[1]
#run second prior
prior=priorval[2]
out1=calc.FPR(samplesizes,utest1,prior,abs(cohend1))  #output=c(FPR,x0,y0,x1,y1)
fpz2=out1[1]
#run first prior
prior=priorval[1]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz3=out2[1]
#run second prior
prior=priorval[2]
out2=calc.FPR(samplesizes,utest2,prior,abs(cohend2))  #output=c(FPR,x0,y0,x1,y1)
fpz4=out2[1]
#Power and likelihood ratio: NB for two sided test, need 2*y0
LR1=out1[5]/(2*out1[3])        #lik ratio (Hi1/H0) =y1/2*y0
LR2=out2[5]/(2*out2[3])
#make tidy table of results
results.utest<-data.frame(cbind(TestxCont1=c(signif[1],
w.statistic1,
utest1,
cohend1,
power1,
signif(bayesF1$bf, 3),
signif(bayesF1$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR1, 3)),
TestxCont2=c(signif[1],
w.statistic2,
utest2,
cohend2,
power2,
signif(bayesF2$bf, 3),
signif(bayesF2$error, 3),
signif(fpz3, 3),
signif(fpz4, 3),
signif(LR2, 3))))
colnames(results.utest)<-c(paste(PIname[1], PIname[2]),paste(PIname[1], PIname[3]))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"U-Test p-value",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2test,plots.2utest, nrow = 1)
}
}
grid.arrange(plots.2test,plots.2utest, nrow = 1)
plots.2test
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
#geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
boxcolors
plotOMparams
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(group, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
boxcolors
plotOMparams
plotOMparams[[OMvariables[1]]]
plotOMparams[[OMvariables[2]]]
plotOMparams[[OMvariables[3]]]
plotOMparams$group
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(desc, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
plots.2test
boxcolors
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(desc, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = c( "khaki"          "olivedrab3"     "cornflowerblue"), notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(desc, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = "black", notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(desc, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][2]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(plotOMparams[[OMvariables[v]]][1]), colnames(plotOMparams[[OMvariables[v]]][3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, y_position =1.2) +
ylim(c(-1, 1.3)) +
stat_n_text()
plots.2test
boxcolors
plotOMparams
# plot two PIs with asterisks
plots.2test<-ggplot(plotOMparams, aes(desc, plotOMparams[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=plotOMparams, aes(group, plotOMparams[[OMvariables[v]]]), position=position_jitter(0.3), shape=21, size=3, colour="black", fill="grey50", alpha=0.4)+
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",
fill=NA), legend.position = "top",
legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
ylim(c(-1, 1.3))
plots.2test
