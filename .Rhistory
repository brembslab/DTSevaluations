geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.7) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.2) +
samplesizes.annotate(boxes, samplesizes)
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4, margin_top=0.15) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.15) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4, margin_top=-0.15) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.15) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.11) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.13) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4,
y_position = 1.2) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.13) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1,
y_position = 1.4) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
gplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 2, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 2, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.4) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.2) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=.2) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5,
y_position = 1.2) +
samplesizes.annotate(boxes, samplesizes)
HeatOn
HeatOn=as.integer(as.factor(PIstatCombined$category))+20
heat.colors()
HeatOn
length(unique(PIstatCombined$category))==2
PIstatCombined$category
case_when(
PIstatCombined$category == "upright T"~"ꓔ",
PIstatCombined$category == "inverted T" ~ "ꓕ",
TRUE ~ NA
)
if(length(unique(PIstatCombined$category))==2){    #if there are only two categories
HeatOn=case_when(
PIstatCombined$category == "Right torque" ~ "►",
PIstatCombined$category == "Left torque"~ "◄",
TRUE ~ NA
)
case_when(
PIstatCombined$category == "Right torque DL" ~ "►",
PIstatCombined$category == "Left torque DL"~ "◄",
TRUE ~ NA
)
case_when(
PIstatCombined$category == "upright T"~"ꓔ",
PIstatCombined$category == "inverted T" ~ "ꓕ",
TRUE ~ NA
)
}
HeatOn
HeatOn=case_when(
PIstatCombined$category == "upright T"~"ꓔ",
PIstatCombined$category == "inverted T" ~ "ꓕ",
TRUE ~ NA
)
HeatOn
HeatOn=as.integer(as.factor(PIstatCombined$category))+20
#special shapes for special cases
if(length(unique(PIstatCombined$category))==2){    #if there are only two categories
HeatOn=case_when(
PIstatCombined$category == "Right torque" ~ "►",
PIstatCombined$category == "Left torque"~ "◄",
TRUE ~ NA
)
HeatOn=case_when(
PIstatCombined$category == "Right torque DL" ~ "►",
PIstatCombined$category == "Left torque DL"~ "◄",
TRUE ~ NA
)
HeatOn=case_when(
PIstatCombined$category == "upright T"~"ꓔ",
PIstatCombined$category == "inverted T" ~ "ꓕ",
TRUE ~ NA
)
}
HeatOn
ggplot(PIstatCombined, aes(group, PIs, fill=group, color=group)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
{if(typeof(HeatOn)=="double") #if the shapes are given as numbers (default), give them a black outline
geom_rain(point.args = list(size = 5, shape=HeatOn, color = "black", alpha=as.integer(as.factor(PIstatCombined$category))/max(as.integer(as.factor(PIstatCombined$category)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))} +
{if(typeof(HeatOn)!="double") #if the shapes are assigned to specuific categories, no black outlines
geom_rain(point.args = list(size = 5, shape=HeatOn, alpha=as.integer(as.factor(PIstatCombined$category))/max(as.integer(as.factor(PIstatCombined$category)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))} +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
scale_y_continuous(breaks = seq(-1, 1, .2)) +
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) +
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+
theme(aspect.ratio=3/NofGroups)+
geom_signif(color="black",
comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=4, vjust=0.1) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) +
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+
theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=4, vjust=0.1) +
samplesizes.annotate(boxes, samplesizes)
ggplot(PIstatCombined, aes(group, PIs, fill=group, color=group)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
{if(typeof(HeatOn)=="double") #if the shapes are given as numbers (default), give them a black outline
geom_rain(point.args = list(size = 5, shape=HeatOn, color = "black", alpha=as.integer(as.factor(PIstatCombined$category))/max(as.integer(as.factor(PIstatCombined$category)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))} +
{if(typeof(HeatOn)!="double") #if the shapes are assigned to specuific categories, no black outlines
geom_rain(point.args = list(size = 5, shape=HeatOn, alpha=as.integer(as.factor(PIstatCombined$category))/max(as.integer(as.factor(PIstatCombined$category)))),
point.args.pos = list(position = ggpp::position_jitternudge(width = 0.1, x = -0.22, nudge.from = "jittered")),
boxplot.args = list(fill="white", color = "black", outlier.shape = NA, size=1.1),
boxplot.args.pos = list(width = 0.12),
violin.args = list(color = NA, alpha = .8),
violin.args.pos = list(side = "r", width = 1))} +
stat_summary(fun.y = mean, color = "darkgrey", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
stat_summary(fun.y=median, color="black", geom = "errorbar", aes(ymax = ..y.., ymin = ..y..), width = 0.2, size = 2.1)+
scale_fill_manual(values = boxcolors) + #color of the violin plot
scale_color_manual(values = boxcolors) + #color of the points
scale_y_continuous(breaks = seq(-1, 1, .2)) +
guides(fill = 'none', color = 'none')+ # remove legends
theme_light(base_size = 16) +
theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+
theme(aspect.ratio=3/NofGroups)+
samplesizes.annotate(boxes, samplesizes) +
wilcox.annotate(boxes, wilcoxon)
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
x
groupnames
## extract the PI learningscore values for the period specified in the dataset yaml file and create dataframes of PIs for plotting
source("include/extractlearningscores.R")
## generate important variables for later plotting and annotation
source("include/plotvariables.R")
## if there are more than two groups, attempt to pool some PI data into two groups
source("include/poolgroups.R")
#### ----- call RMarkdown for dataset evaluations ----- ################################################
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
x=1
rmarkdown::render(paste(start.wd,"/rmarkdown/dataset.Rmd", sep=""),                                #####
output_file = paste(dataset.data$experiment$name,"html", sep = "."),             #####
output_dir = dataset.path)                                                       #####
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
ggplot(PIstatPooled, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors[1:2], notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatPooled, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=1)+
geom_signif(comparisons = list(c(colnames(PIprofilePooled[1]), colnames(PIprofilePooled[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=4) +
samplesizes.annotate(boxes[1:2], samplesizesPooled)
ggplot(PIstatPooled, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors[1:2], notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatPooled, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom") +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=1)+
geom_signif(comparisons = list(c(colnames(PIprofilePooled[1]), colnames(PIprofilePooled[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=4) +
samplesizes.annotate(boxes[1:2], samplesizesPooled)
