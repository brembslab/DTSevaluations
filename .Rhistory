textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2, heights=c(0.1,0.1))
utest
results.utest<-data.frame(values=c(signif[1],
w.statistic,
utest,
cohend,
power,
signif(bayesF$bf, 3),
signif(bayesF$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR, 3)))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"MW U-Test p",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2, heights=c(0.1,0.1))
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2, heights=c(0.1,0.1))
```{r Utest, eval=(PIs_present & twogroupstats & NofGroups==2), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 10, fig.width = 6, comment=NA, results='asis'}
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2, heights=c(0.1,1))
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
```{r Utest, eval=(PIs_present & twogroupstats & NofGroups==2), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 5, comment=NA, results='asis'}
twogroupstats=TRUE
NofGroups=2
```{r Utest, eval=(PIs_present & twogroupstats & NofGroups==2), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 5, comment=NA, results='asis'}
PIs_present
```{r Utest, eval=(PIs_present & twogroupstats & NofGroups==2), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 5, comment=NA, results='asis'}
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
fig.height
fig.height=12
fig.height
fig.width
fig.width=5
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
fig.height
fig.height=24
```{r Utest, eval=(PIs_present & twogroupstats & NofGroups==2), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 5, comment=NA, results='asis'}
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
#Write table of period design
periods <- periods[-6,]
periods[3,periods["outcome",]==0]="test"
periods[3,periods["outcome",]==1]="training"
reactable(setDT(as.data.frame(periods), keep.rownames = "property")[],
striped = TRUE,
highlight = TRUE,
bordered = TRUE,
resizable = TRUE,
compact = TRUE,
columns = list(property = colDef(style = list(position = "sticky", left = 0, background = "#fff", zIndex = 1),
headerStyle = list(position = "sticky", left = 0, background = "#fff", zIndex = 1))))
len = as.integer(lengths(dataset.data["resources"])*5)
aspect_ratio = 4/nrow(sequence %>% na.omit())
exp_groups <- as.data.frame(sapply(exp_groups, '[', seq(max(lengths(exp_groups))))) #make dataframe from list
colnames(exp_groups) = as.character(exp_groups[1, ]) # make group names to column names
if(!is.null(groupids)){exp_groups[1, ] <- groupids}else{exp_groups <- tail(exp_groups,-1)}
rownames(exp_groups) <- NULL #remove the numbers
#plot table with links to individual fly evaluations
reactable(exp_groups,
striped = TRUE,
highlight = TRUE,
bordered = TRUE,
resizable = TRUE,
compact = TRUE,
fullWidth = FALSE,
defaultColDef = colDef(html = TRUE),
defaultPageSize = 45)
for(x in 1:NofGroups)
{
cat("<center><h4>",dataset.data[["resources"]][[x]][["title"]],"</h4></center>")
par(mfrow=c(ceiling((NofPeriods+1)/3),3)) # sets the dimension of the multiplot, row x column
old.par = par(mar = c(3, 4, 1, 2))
grouphistdata[[x]]$period =as.factor(grouphistdata[[x]]$period)
for (i in 1:NofPeriods){
df = subset(grouphistdata[[x]], grouphistdata[[x]]$period == i)
hist(x = df$fly, breaks = 4000,xlim = c(-600,600), xlab="", border= sequence$histocolor[i],  col = sequence$histocolor[i], main=paste("Period ", i)) #plot histogram
if(any(c("yt","sw") %in% sequence$type[i])) {
rect(-2000, 0, 0, 50000, col=("lightgrey")) #shade negative torque range as heated
hist(x = df$fly, breaks = 4000,xlim = maxfly, xlab="", border= sequence$histocolor[i],  col = sequence$histocolor[i], main=paste("Period ", i), add=TRUE) #plot histogram again
}
abline(v = 0, col="black", lwd=2, lty=2)
}
hist(grouphistdata[[x]]$fly, breaks = 300,xlim = c(-600,600), xlab=paste(FlyBehavior, "[arb units]"), main=paste("Pooled Behavior Histogram", groupnames[[x]]))
}
cat("\n## Arena Position Histograms\n")
for(x in 1:NofGroups)
{
cat("<center><h4>",dataset.data[["resources"]][[x]][["title"]],"</h4></center>")
par(mfrow=c(round((NofPeriods+1)/2),2)) # sets the dimension of the multiplot, row x column
old.par = par(mar = c(4, 4, 1, 2))
grouphistdata[[x]]$period =as.factor(grouphistdata[[x]]$period)
for (i in 1:NofPeriods){
df = subset(grouphistdata[[x]], grouphistdata[[x]]$period == i)
hist(x = df$a_pos, breaks = 360,xlim = c(-1800,1800), xlab="", ylab = "", border= sequence$histocolor[i],  col = sequence$histocolor[i], main=paste("Period ", i), xaxt='n', yaxs="i") #plots histogram
#add quadrant shading
rect(-1800, 0, -1350, 8000, col=("lightgrey"))
rect(-450, 0, 450, 8000, col=("lightgrey"))
rect(1350, 0, 1800, 8000, col=("lightgrey"))
hist(x = df$a_pos, breaks = 360,xlim = c(-1800,1800), xlab="", ylab = "", border= sequence$histocolor[i],  col = sequence$histocolor[i], main=paste("Period ", i), add = TRUE) #plots histogram again
abline(v = 0, col="black", lwd=1, lty="dotted") # adds a line at 0
abline(v = 900, col="black", lwd=1, lty="dotted") # adds a line at 90°
abline(v = -900, col="black", lwd=1, lty="dotted") # adds a line at -90°
axis(side=1, at=c(-1800, -900, 0, 900, 1800))
mtext(text = paste("Arena Position [degrees*10]"),
cex = 1,
side = 1,#side 1 = bottom
line = 2.5)
mtext(text = "Frequency",
cex = 1,
side = 2, #side 2 = left
line = 2)
}
#add pooled histogram
hist(grouphistdata[[x]]$a_pos, breaks = 360, border = "grey40", col = "grey40", xlab="", ylab="", main=paste("Pooled Position Histogram", groupnames[[x]]), xaxt='n', yaxs="i")
axis(side=1, at=c(-1800, -900, 0, 900, 1800))
#add quadrant borders
abline(v = -1350, col="black", lwd=1, lty="dotted") # adds a line at -135°
abline(v = -450, col="black", lwd=1, lty="dotted") # adds a line at -45°
abline(v = 450, col="black", lwd=1, lty="dotted") # adds a line at 45°
abline(v = 1350, col="black", lwd=1, lty="dotted") # adds a line at 135°
mtext(text = paste("Arena Position [degrees*10]"),
cex = 1,
side = 1,#side 1 = bottom
line = 2.5)
mtext(text = "Frequency",
cex = 1,
side = 2, #side 2 = left
line = 2)
}
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=4/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.1) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2utest,plots.2test, ncol=1, nrow=2, heights=c(0.2,1))
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.1) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2utest,plots.2test, ncol=1, nrow=2)
```{r UtestG3, eval=(PIs_present & threegroupstats & NofGroups==3), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 6, comment=NA, results='asis'}
# plot two PIs with asterisks
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.1) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2utest,plots.2test, ncol=1, nrow=2)
plots.2test<-ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category),
position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid",
colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank()) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18), axis.title.x=element_blank())+
ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1, margin_top=0.1) +
samplesizes.annotate(boxes, samplesizes)
#add table with results and plot
plots.2utest<-tableGrob(results.utest)
grid.arrange(plots.2utest,plots.2test, ncol=1, nrow=2)
results.utest<-data.frame(values=c(signif[1],
w.statistic,
utest,
cohend,
power,
signif(bayesF$bf, 3),
signif(bayesF$error, 3),
signif(fpz1, 3),
signif(fpz2, 3),
signif(LR, 3)))
rownames(results.utest)<-c("Significance level",
"MW U-Test, W",
"MW U-Test, p",
"Cohen's D",
"stat. Power",
"Bayes Factor",
"Bayes Factor error",
paste("FP risk, prior ",priorval[1]),
paste("FP risk, prior ",priorval[2]),
"Likelihood Ratio")
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test<-ggplot(PIstatPooled, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors[1:2], notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatPooled, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom") +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=1)+
geom_signif(comparisons = list(c(colnames(PIprofilePooled[1]), colnames(PIprofilePooled[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes[1:2], samplesizesPooled)
#plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatPooled, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors[1:2], notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatPooled, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom") +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=1)+
geom_signif(comparisons = list(c(colnames(PIprofilePooled[1]), colnames(PIprofilePooled[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes[1:2], samplesizesPooled)
#plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
```{r Utestpooled, eval=(PIs_present & twogroupstats & PoolGrps), echo=FALSE, warning=FALSE, message=FALSE, error=FALSE, fig.align = "center", fig.height = 12, fig.width = 6, comment=NA, results='asis'}
#prepare Grob with results table
plots.2test<-list(tableGrob(results.utest))
# plot two PIs with asterisks
plots.2test[[2]]<-ggplot(PIstatPooled, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors[1:2], notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatPooled, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom") +
theme(axis.text.y = element_text(size=18))+ ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=1)+
geom_signif(comparisons = list(c(colnames(PIprofilePooled[1]), colnames(PIprofilePooled[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=8, vjust=0.5) +
samplesizes.annotate(boxes[1:2], samplesizesPooled)
#plot
grid.arrange(grobs = plots.2test, ncol=1, nrow=2)
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
View(CatStat)
category
PIstatCombined
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
ggplot(plotOMparamsBefore, aes(group, plotOMparamsBefore[[OMvariables[v]]])) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = TRUE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data = plotOMparamsBefore, aes(group, plotOMparamsBefore[[OMvariables[v]]]),
shape=21, size=3, colour="black", fill="grey50", alpha=0.4) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black",fill=NA),
legend.position = "top", legend.title = "Heat on:") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18))+
ylab(paste(OMtitles[v], " [rel. units]", sep = ""))+ xlab("Groups")+ theme(aspect.ratio=3/NofGroups)+
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[2]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1) +
geom_signif(comparisons = list(c(colnames(PIstat[1]), colnames(PIstat[3]))),
map_signif_level= c("***"= signif[3],"**"= signif[2], "*"= signif[1]),
textsize=5, vjust=0.1,margin_top=0.1) +
samplesizes.annotate(boxes, samplesizes)
gplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = FALSE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = "Heat on:") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
samplesizes.annotate(boxes, samplesizes) +
wilcox.annotate(boxes, wilcoxon)
ggplot(PIstatCombined, aes(group, PIs)) +
geom_hline(yintercept = 0, colour = "#887000", size = 1.2) +
geom_boxplot(fill = boxcolors, notch = FALSE, outlier.color=NA, width=0.8, size=0.6) +
geom_jitter(data=PIstatCombined, aes(group, PIs, fill=category), position=position_jitter(0.3), shape=21, size=3, alpha=0.5) +
scale_y_continuous(breaks = seq(-1, 1, .2)) +
theme_light(base_size = 16) + theme(panel.grid.minor = element_blank(), panel.grid.major.x = element_blank(), axis.title.x=element_blank(), panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA), legend.position = "bottom", legend.direction = "horizontal", legend.title = "Heat on:") +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(size=18)) + ylab(paste("PI", learningscore, " [rel. units]", sep = ""))+ theme(aspect.ratio=3/NofGroups)+
samplesizes.annotate(boxes, samplesizes) +
wilcox.annotate(boxes, wilcoxon)
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
source("B:/GitHub/DTSevaluations/evaluate_datasets.R", echo=TRUE)
ggplot(spectemp, aes(x=freq, y=mean, group = group)) +
geom_ribbon(aes(ymin=mean-sd, ymax=mean+sd, fill = group), alpha=0.5) +
scale_fill_manual(values = boxcolors) +
geom_line(aes(colour = group), size = 2) +
scale_color_manual(values = boxcolors) +
scale_x_continuous(breaks = seq(0, 10, 2), limits = c(0, 10), expand=c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1), expand=c(0,0)) +
ggtitle("Powerspectra") +
guides(colour = guide_legend(override.aes = list(size=3))) +
theme_light(base_size = 16) + theme(legend.justification=c(1,0),
legend.position=c(0.94,0.60),
legend.key.size = unit(2, 'lines'),
legend.key = element_rect(size = 6),
legend.box.background = element_rect(fill="white"),
legend.box.margin = margin(4, 4, 4, 4),
legend.text=element_text(size=14),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.y = element_text(size=12))+ ylab("mean rel. Power") + xlab("Frequency [Hz]")
ggplot(spectemp, aes(x=freq, y=mean, group = group)) +
geom_ribbon(aes(ymin=mean-sd, ymax=mean+sd, fill = group), alpha=0.5) +
scale_fill_manual(values = boxcolors) +
geom_line(aes(colour = group), size = 2) +
scale_color_manual(values = boxcolors) +
scale_x_continuous(breaks = seq(0, 10, 2), limits = c(0, 10), expand=c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1), expand=c(0,0)) +
ggtitle("Powerspectra") +
guides(colour = guide_legend(override.aes = list(size=3))) +
theme_light(base_size = 16) + theme(legend.justification=c(1,0),
legend.position=c(0.94,0.60),
legend.key.size = unit(2, 'lines'),
legend.key = element_rect(size = 6),
legend.box.background = element_rect(fill="white"),
legend.box.margin = margin(4, 4, 4, 4),
legend.text=element_text(size=14),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
scale_fill_discrete(name = "Heat on:")+ #legend title for categories
theme(axis.text.y = element_text(size=12))+ ylab("mean rel. Power") + xlab("Frequency [Hz]")
ggplot(spectemp, aes(x=freq, y=mean, group = group)) +
geom_ribbon(aes(ymin=mean-sd, ymax=mean+sd, fill = group), alpha=0.5) +
scale_fill_manual(values = boxcolors) +
geom_line(aes(colour = group), size = 2) +
scale_color_manual(values = boxcolors) +
scale_x_continuous(breaks = seq(0, 10, 2), limits = c(0, 10), expand=c(0,0)) +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0, 1), expand=c(0,0)) +
ggtitle("Powerspectra") +
guides(colour = guide_legend(override.aes = list(size=3))) +
theme_light(base_size = 16) + theme(legend.justification=c(1,0),
legend.position=c(0.94,0.60),
legend.key.size = unit(2, 'lines'),
legend.key = element_rect(size = 6),
legend.box.background = element_rect(fill="white"),
legend.box.margin = margin(4, 4, 4, 4),
legend.text=element_text(size=14),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(size = 0.5, linetype = "solid", colour = "black", fill=NA)) +
theme(axis.text.y = element_text(size=12))+ ylab("mean rel. Power") + xlab("Frequency [Hz]")
