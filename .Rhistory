library(dplyr)
library(plyr)
library(gridExtra)
library(yaml)
library(ggsignif)
library(effsize)
library(pwr)
library(BayesFactor)
library(genefilter)
library(seewave)
library(lubridate)
library(rmarkdown)
library(markdown)
library(knitr)
install.packages("digest")
library(ggplot2)
library(tidyr)
library(dygraphs)
library(grid)
library(reshape2)
library(plyr)
library(dplyr)
library(gridExtra)
library(yaml)
library(ggsignif)
library(effsize)
library(pwr)
library(BayesFactor)
library(genefilter)
install.packages("mvtnorm")
install.packages("RSQLite")
library(BayesFactor)
library(genefilter)
library(seewave)
library(lubridate)
library(rmarkdown)
library(markdown)
library(knitr)
library(zoo)
library(dabestr)
install.packages("dabestr")
install.packages(c("httr", "knitr", "markdown", "nlme", "pkgbuild", "tinytex"))
install.packages(c("httr", "knitr", "markdown", "nlme", "pkgbuild", "tinytex"))
devtools::install_github("ACCLAB/dabestr")
install.packages("dabestr")
install.packages("dabestr")
library(dabestr)
install.packages("dabestr")
install.packages("rlang")
install.packages(c("dplyr", "ggsignif", "knitr", "markdown", "Rcpp", "rlang", "tibble", "tinytex"))
install.packages(c("ggforce", "ggplot2", "ggsignif", "knitr", "markdown", "tinytex"))
install.packages("dabestr")
View(fly)
install.packages(c("digest", "ellipsis", "ggforce", "knitr", "mgcv", "pbapply", "pkgconfig", "rmarkdown", "tidyr", "tinytex", "xfun"))
install.packages("dabestr")
install.packages(c("backports", "BiocManager", "callr", "curl", "data.table", "devtools", "digest", "ellipsis", "ggforce", "ggplot2", "ggsignif", "hms", "htmltools", "htmlwidgets", "httr", "knitr", "markdown", "mgcv", "modelr", "nlme", "pbapply", "pkgbuild", "pkgconfig", "rmarkdown", "sys", "tidyr", "tinytex", "TTR", "whisker", "xfun", "xml2"))
install.packages(c("BiocManager", "htmlwidgets", "nlme"))
install.packages("dabestr")
install.packages("dabestr")
install.packages("dabestr")
q()
install.packages(c("BiocManager", "boot", "foreign", "htmlwidgets", "mgcv", "nlme"))
(log(4500)-log(1800))/log(1.05)
(log(5000)-log(1800))/log(1.06)
(log(5000)-log(3300))/log(1.06)
(log(5000)-log(2000))/log(1.06)
(log(5000)-log(3600))/log(1.06)
View(experiment)
View(sequence)
View(sequence)
ggplot(data=all.data, aes_string(all.data$a_pos)) +
geom_histogram(binwidth=10) +
labs(x="position [arb units]", y="frequency") +
xlim(-1800,1800) +
ggtitle("Pooled Position Histogram")
library(ggplot2)
load("B:/GitHub/DTSevaluations/example data/colorlearning/.RData")
ggplot(data=all.data, aes_string(all.data$a_pos)) +
geom_histogram(binwidth=10) +
labs(x="position [arb units]", y="frequency") +
xlim(-1800,1800) +
ggtitle("Pooled Position Histogram")
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -1.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.1, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 0.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.0, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 0.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-2.0, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 0.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 0.2, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 0.9, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 1.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 2.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 3.1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 2.8, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 3, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = .3, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = 1.3, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -1, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.5, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", -Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =-1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =1.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =2.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =0.6, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =1, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
ggplot(data=OMdata, aes(x=OMdata$time/1000, y=OMdata[[as.character(flyname)]])) +
geom_rect(aes(xmin = mean(OMdata$time/1000),xmax = Inf,ymin = -Inf, ymax = Inf),fill=("grey"), alpha=0.01) +
geom_hline(yintercept = 0) +
geom_line() +
ylab("Optomotor Resoponse [rel. units]")+
xlab("Time [s]") +
theme_classic() +
annotate("text", -Inf, -Inf, label = "Right (clockwise) arena rotations", hjust = -.4, vjust = -1.3)+
annotate("text", Inf, Inf, label = "Left (counter-clockwise) arena rotations", hjust =1.1, vjust = 1.5)+
theme(panel.grid.major.x = element_blank(),panel.grid.major.y = element_line(colour = "black",linetype="dashed",size=0.1))+
scale_x_continuous(expand = expand_scale(add = 0))
setwd("B:/GitHub/DTSevaluations")
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Write table of period design
periods <- periods[-6,]
periods[3,periods["outcome",]==0]="test"
periods[3,periods["outcome",]==1]="training"
grid.table(periods)
if(lengths(project.data["resources"]) == 1){
len = as.integer(5)
} else {
len = as.integer(8)
}
aspect_ratio = 4/nrow(sequence %>% na.omit())
exp_groups <- as.data.frame(t(plyr::ldply(exp_groups, rbind))) #make dataframe from list
colnames(exp_groups) = as.character(unlist(exp_groups[1, ])) # make group names to column names
#tidy the dataframe up a little
exp_groups = exp_groups[-1, ,drop=F] #remove the first row which is now column names, without converting to a vector in case of single column
rownames(exp_groups) <- NULL #remove the numbers
kable(exp_groups) #plot table with links to individual fly evaluations
for(x in 1:NofGroups)
{
cat("<center><h4>",project.data[["resources"]][[x]][["title"]],"</h4></center>")
flyhistos <- grouped.flyhistos[[x]]
multiplot(plotlist = flyhistos, cols=round(NofPeriods/5)) #flyhistos
}
cat("\n## Arena Position Histograms\n")
for(x in 1:NofGroups)
{
cat("<center><h4>",project.data[["resources"]][[x]][["title"]],"</h4></center>")
poshistos <- grouped.poshistos[[x]]
multiplot(plotlist = Filter(Negate(is.null), poshistos), cols=round(sum(poshistos!="NULL")/5)) #positionhistos
}
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
dmy(experiment$dateTime)
experiment$dateTime
strptime(experiment$dateTime,format='%d/%b/%Y:%H:%M:%S')
strptime(as.date(experiment$dateTime),format='%d/%b/%Y:%H:%M:%S')
strptime(as.Date(experiment$dateTime),format='%d/%b/%Y:%H:%M:%S')
as.Date(experiment$dateTime)
format(experiment$dateTime,'%A, %B %d, %Y %H:%M:%S')
format(as.Date(experiment$dateTime),'%A, %B %d, %Y %H:%M:%S')
ISOdatetime(experiment$dateTime)
as.POSIXct(experiment$dateTime)
strptime("2008-03-10T15:15:15", "%a, %d %b %Y %H:%M:%S %z")
strptime("2008-03-10T15:15:15")
strptime("2008-03-10 15:15:15", "%a, %d %b %Y %H:%M:%S %z")
strptime("2008-03-10 15:15:15", "%Y-%m-%d %H:%M:%S")
strptime("2008-03-10 15:15:15", "%Y-%M-%d %H:%M:%S")
strptime("2008-03-10 15:15:15", "%A, %Y-%m-%d %H:%M:%S")
histo1$v2 = groupnames[x]
as.Date(experiment$dateTime)
chron(experiment$dateTime)
as.POSIXct(experiment$dateTime)
strptime("2008-03-10T15:15:15", "%Y-%M-%d %H:%M:%S")
strptime("2008-03-10 15:15:15", "%Y-%M-%d %H:%M:%S")
as.POSIXct(strptime("2008-03-10 15:15:15", "%Y-%M-%d %H:%M:%S"))
as.POSIXct(experiment$dateTime)
as.POSIXct(2008-12-10 15:15:15)
timestamp(2008-12-10 15:15:15)
timestamp(experiment$dateTime)
##------ 2008-03-10T15:15:15 ------##
timestamp(experiment$dateTime, , "%m/%Y-%d %Hh%Mm%Ss")
##------ 2008-03-10T15:15:15%m/%Y-%d %Hh%Mm%Ss
timestamp(timestamp=experiment$dateTime, , "%m/%Y-%d %Hh%Mm%Ss")
timestamp(timestamp="2012-08-08 22:55 GMT", tz="?")
gsub
gsub("T", " ", experiment$dateTime)
as.POSIXct(gsub("T", " ", experiment$dateTime))
format(as.POSIXct(gsub("T", " ", experiment$dateTime)),'%A, %B %d, %Y %H:%M:%S')
paste(format(as.POSIXct(gsub("T", " ", experiment$dateTime)),'%A, %B %d, %Y %H:%M:%S'))
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
xlim(-1800,1800)+
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(1,1)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(.01,.01)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(.0001,.0001)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(.001,.001)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=temp, aes_string(temp$a_pos)) +
geom_rect(aes(xmin = -Inf, xmax = -1350, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = -450, xmax = 450, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_rect(aes(xmin = 1350, xmax = Inf, ymin = -Inf, ymax = Inf), fill=("lightgrey")) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=20, fill = sequence$histocolor[i]) +
labs(x="Arena Position [degrees*10]", y="frequency") +
theme_light() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), expand = c(0,0), limits = c(-1800,1800)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "Period", i))
ggplot(data=rawdata, aes_string(rawdata$a_pos)) +
geom_histogram(binwidth=10) +
labs(x="position [degrees*10]", y="frequency") +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), limits = c(-1800,1800), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "total"))
ggplot(data=rawdata, aes_string(rawdata$a_pos)) +
geom_vline(xintercept=c(-900,0,900), linetype="dotted") +
geom_histogram(binwidth=10) +
labs(x="position [degrees*10]", y="frequency") +
scale_x_continuous(breaks = c(-1800, -900, 0, 900, 1800), limits = c(-1800,1800), expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
ggtitle(paste(flyname, "total"))
