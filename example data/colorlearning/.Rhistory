q()
install.packages(c("adehabitat","XML","lattice","hexbin",
"colorRamps" ,"corrplot","gplots", "rgl", "MASS", "adehabitatLT","corrplot"), dependencies=TRUE)
q()
load("F:/PV-Anlage/.RData")
flyData <- xmlParse(file.choose())
require("XML")
require("data.table")
install.packages(XML)
install.packages("XML")
install.packages("data.table")
library("XML")
flyData <- xmlParse(file.choose())
setwd("B:/GitHub/DTSevaluations")
source('B:/GitHub/DTSevaluations/HTML_DTS_project.R', echo=TRUE)
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste("<a href=",grp_list[l],">", grp_list[l],"</a>")  #create link to each HTML document
}
groups[x] <- c(grp_title, grp_description, grp_list)
groups[[x]] <- c(grp_title, grp_description, grp_list)
groups[[1]] <- c(grp_title, grp_description, grp_list)
test <- c(grp_title, grp_description, grp_list)
groups[[x]] = c(grp_title, grp_description, grp_list)
exp_groups[[x]] <- c(grp_title, grp_description, grp_list)
exp_groups[x] <- c(grp_title, grp_description, grp_list)
exp_groups <- c(grp_title, grp_description, grp_list)
exp_groups$1 <- c(grp_title, grp_description, grp_list)
exp_group$1 <- c(grp_title, grp_description, grp_list)
exp_groups[x] = c(grp_title, grp_description, grp_list)
exp_groups <- data.frame()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub("xml", "html", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and html extension
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste("<a href=",grp_list[l],">", grp_list[l],"</a>")  #create link to each HTML document
}
exp_groups[x] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
grid.table(exp_groups)
exp_groups[x] <- cbind(grp_title, grp_description, grp_list)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub("xml", "html", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and html extension
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste("<a href=",grp_list[l],">", grp_list[l],"</a>")  #create link to each HTML document
}
exp_groups[x] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
View(exp_groups)
View(exp_groups)
exp_groups[1]
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
exp_groups[[x]]
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub("xml", "html", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and html extension
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste('<a href="',grp_list[l],'">', grp_list[l],'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
exp_groups[[x]]
exp_groups[[1]]
grid.table(exp_groups)
grid.table(do.call(rbind.data.frame, exp_groups))
test <- do.call(rbind.data.frame, exp_groups)
View(test)
test <- do.call(cbind.data.frame, exp_groups)
kable(exp_groups)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub(".xml", "", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and remove xml
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste('<a href="',grp_list[l],'_descr_anal.html">', grp_list[l],'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
View(exp_groups)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
View(exp_groups)
kable(exp_groups)
View(exp_groups)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub(".xml", "", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and remove xml
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste('<a href="',grp_list[l],'_descr_anal.html">', grp_list[l],'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
View(exp_groups)
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste('<a href="',grp_list[l],'_descr_anal.html">', grp_list[l],'</a>', sep = '')  #create link to each HTML document
}
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- gsub(".xml", "", project.data[["resources"]][[x]][["data"]]) #create vector with fly names and remove xml
for (l in 1:length(grp_list))
{
grp_list[[l]] = paste('<a href="',grp_list[l],'_descr_anal.html">', grp_list[l],'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
View(exp_groups)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
gsub(".xml", "", xml_name)
View(PIstat)
View(PIprofile)
View(PIplots)
View(grouped.PIprofiles)
View(fly)
View(project.data)
xml_name
evaluation.path
project.path
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- project.data[["resources"]][[x]][["data"]] #create vector with filenames
for (l in 1:length(grp_list))
{
xml_name=grp_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
grp_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
pwd
getwd()
setwd(B:/DTS_datamodel/colorlearning/xml)
setwd(B:\DTS_datamodel\colorlearning\xml)
setwd(B:\\DTS_datamodel\\colorlearning\\xml)
setwd("B:/DTS_datamodel/colorlearning/xml")
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
grp_list <- project.data[["resources"]][[x]][["data"]] #create vector with filenames
for (l in 1:length(grp_list))
{
xml_name=grp_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
grp_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, grp_list) #add name and description and file links to dataframe
}
kable(exp_groups)
kable(as.data.frame(exp_groups)
)
kable(as.data.frame(t(exp_groups)))
grid.table(as.data.frame(t(exp_groups)))
test <- as.data.frame(t(exp_groups))
View(test)
test <- t(as.data.frame(exp_groups))
test <- as.data.frame(transpose(exp_groups))
View(PIprofile)
View(PIstat)
test <- as.data.frame(t(plyr::ldply(exp_groups, rbind)))
View(test)
kable(test)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
getwd()
for (l in 1:length(grp_list))
{
xml_name=grp_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
grp_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
xml_list = paste(project.path, project.data[["resources"]][[x]][["data"]], sep = "/")
for (l in 1:length(grp_list))
{
xml_name=xml_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
xml_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, xml_list) #add name and description and file links to dataframe
}
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
colnames(exp_groups) = exp_groups[1, ]
colnames(exp_groups) <- as.character(unlist(exp_groups[1,]))
View(exp_groups)
exp_groups <- as.data.frame(t(plyr::ldply(exp_groups, rbind)))
colnames(exp_groups) <- as.character(unlist(exp_groups[1,]))
View(exp_groups)
View(exp_groups)
colnames(exp_groups) = exp_groups[1, ]
View(exp_groups)
View(exp_groups)
exp_groups = exp_groups[-1,]
View(exp_groups)
View(exp_groups)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
xml_list = paste(project.path, project.data[["resources"]][[x]][["data"]], sep = "/")
for (l in 1:length(xml_list))
{
xml_name=xml_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
xml_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_description, xml_list) #add name and description and file links to dataframe
}
exp_groups <- as.data.frame(t(plyr::ldply(exp_groups, rbind))) #make dataframe from list
colnames(exp_groups) <- as.character(unlist(exp_groups[1,])) # make group names to column names
exp_groups = exp_groups[-1,]
kable(exp_groups)
View(exp_groups)
View(exp_groups)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
xml_list = paste(project.path, project.data[["resources"]][[x]][["data"]], sep = "/")
for (l in 1:length(xml_list))
{
xml_name=xml_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
xml_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_description, xml_list) #add name and description and file links to dataframe
}
exp_groups <- as.data.frame(t(plyr::ldply(exp_groups, rbind))) #make dataframe from list
colnames(exp_groups) <- as.character(unlist(exp_groups[1,])) # make group names to column names
View(exp_groups)
View(exp_groups)
exp_groups <- list()
for(x in 1:NofGroups)
{
grp_title = project.data[["resources"]][[x]][["title"]] #collect name of the group
grp_description = project.data[["resources"]][[x]][["description"]] #collect name of the group
xml_list = paste(project.path, project.data[["resources"]][[x]][["data"]], sep = "/")
for (l in 1:length(xml_list))
{
xml_name=xml_list[l]
##### read the data with the corresponding function #######
singleflydata <- flyDataImport(xml_name)
##extract fly meta-data
fly <- singleflydata[[3]]
flyname = fly$name[1]
xml_list[[l]] = paste('<a href="',flyname,'_descr_anal.html">', flyname,'</a>', sep = '')  #create link to each HTML document
}
exp_groups[[x]] <- c(grp_title, grp_description, xml_list) #add name and description and file links to dataframe
}
exp_groups <- as.data.frame(t(plyr::ldply(exp_groups, rbind))) #make dataframe from list
colnames(exp_groups) <- as.character(unlist(exp_groups[1,])) # make group names to column names
exp_groups = exp_groups[-1,]
View(exp_groups)
View(exp_groups)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
View(exp_groups)
View(exp_groups)
rownames(exp_groups) <- NULL
View(exp_groups)
View(exp_groups)
rmarkdown::render('b:/GitHub/DTSevaluations/project.Rmd',
output_file = paste(project.data$name,"html", sep = "."),
output_dir = evaluation.path)
